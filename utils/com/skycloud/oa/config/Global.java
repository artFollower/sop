package com.skycloud.oa.config;import java.util.Map;import java.util.concurrent.ConcurrentHashMap;import javax.servlet.http.HttpServletRequest;import org.apache.commons.logging.Log;import org.apache.commons.logging.LogFactory;import com.skycloud.oa.utils.PropertiesHelper;public final class Global {	static Log log = LogFactory.getLog(Global.class);	private static Global instance = null;	private static boolean ISINIT = false;	public static final String VERSION = "2.0";	public static final String CHARSET = "UTF-8";	public static String Root = "WEB-INF/classes";	public static Map<String, Object> cloudConfig = new ConcurrentHashMap<String, Object>();	public static final String CLOUD_CONFIG = "cloudConfig";	public static Map<String, Map<String, Object>> msgTmp = new ConcurrentHashMap<String, Map<String, Object>>();//消息模板	public static Global getInstance() {		synchronized (Global.class) {			if (instance == null) {				instance = new Global();			}		}		return instance;	}	public void initGlobal(HttpServletRequest request) {		synchronized (this) {			if (!ISINIT) {				setJchRoot(request);				initConfig();				ISINIT = true;								request.getServletContext().setAttribute("successUrl", cloudConfig.get("cas.successUrl.url").toString());				request.getServletContext().setAttribute("loginUrl", cloudConfig.get("cas.loginUrl.url").toString());				request.getServletContext().setAttribute("logoutUrl", cloudConfig.get("cas.logoutUrl.url").toString());							}		}	}	/**	 * 设置文件在系统中的根路径	 * 	 * @param request	 */	public static void setJchRoot(HttpServletRequest request) {		Root = request.getSession().getServletContext().getRealPath("/") + "/WEB-INF/classes/";		if (Root == null) {			try {				Root = request.getSession().getServletContext().getResource("/").getPath() + "/WEB-INF/classes/";			} catch (Exception e) {				e.printStackTrace();			}		}	}	/**	 * 获取属性文件中的内容	 * @Title:Global	 * @Description:	 * @Date:2015年8月3日 下午2:58:41	 * @return :void 	 * @throws	 */	public static void initConfig() 	{		try 		{			PropertiesHelper ph = new PropertiesHelper(Root+"sop.properties");//			PropertiesHelper ph = new PropertiesHelper("D:\\workspace\\nsop\\WebContent\\WEB-INF\\classes\\sop.properties");			for(Object key : ph.getProperties().keySet()) 			{				cloudConfig.put(key.toString(), ph.getValue(key.toString()));			}					} 		catch (Exception e) 		{			e.printStackTrace();		}	}}